import { NextResponse } from 'next/server'
import { userInventory, userCards } from '@/lib/spawn-storage'

export async function GET(request: Request) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º userId –∏–∑ query –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    const { searchParams } = new URL(request.url)
    const userId = searchParams.get('userId') || 'demo-user'

    console.log('üìä –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è:', userId)

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ in-memory —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    const userShards = userInventory.filter(item => item.userId === userId)
    const userNFTCards = userCards.filter(item => item.userId === userId)

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    return NextResponse.json({
      totalShards: userShards.length,
      totalCards: userNFTCards.length,
      daysOnSite: 0, // –ü–æ–∫–∞ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º
      shardsFound: userShards.length,
      cardsOwned: userNFTCards.length,
    })
  } catch (error) {
    console.error('Error fetching user stats:', error)
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏' },
      { status: 500 }
    )
  }
}
