import { NextRequest, NextResponse } from 'next/server'
import { prisma } from '@/lib/db'

/**
 * –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ 1 –∫–∞—Ä—Ç–æ—á–∫–∏ + 3 –æ—Å–∫–æ–ª–∫–æ–≤
 * POST /api/admin/reset-database
 * –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö!
 */
export async function POST(request: NextRequest) {
  try {
    console.log('üóëÔ∏è  –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')

    // 1. –£–¥–∞–ª—è–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –æ—Å–∫–æ–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    await prisma.userShard.deleteMany({})
    console.log('‚úÖ UserShards —É–¥–∞–ª–µ–Ω—ã')

    // 2. –£–¥–∞–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    await prisma.userCard.deleteMany({})
    console.log('‚úÖ UserCards —É–¥–∞–ª–µ–Ω—ã')

    // 3. –£–¥–∞–ª—è–µ–º spawn points
    await prisma.spawnPoint.deleteMany({})
    console.log('‚úÖ SpawnPoints —É–¥–∞–ª–µ–Ω—ã')

    // 4. –£–¥–∞–ª—è–µ–º –æ—Å–∫–æ–ª–∫–∏
    await prisma.shard.deleteMany({})
    console.log('‚úÖ Shards —É–¥–∞–ª–µ–Ω—ã')

    // 5. –£–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    await prisma.card.deleteMany({})
    console.log('‚úÖ Cards —É–¥–∞–ª–µ–Ω—ã')

    // 6. –£–¥–∞–ª—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    await prisma.collection.deleteMany({})
    console.log('‚úÖ Collections —É–¥–∞–ª–µ–Ω—ã')

    console.log('üå± –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')

    // –°–æ–∑–¥–∞—ë–º –∫–æ–ª–ª–µ–∫—Ü–∏—é
    const collection = await prisma.collection.create({
      data: {
        id: 'default-collection',
        name: 'Qora Collection',
        description: '–ë–∞–∑–æ–≤–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è NFT –∫–∞—Ä—Ç–æ—á–µ–∫ Qora',
        imageUrl: '/collections/qora.png',
        active: true,
      }
    })

    // –°–æ–∑–¥–∞—ë–º –û–î–ù–£ –∫–∞—Ä—Ç–æ—á–∫—É
    const card = await prisma.card.create({
      data: {
        id: 'card-qora-main',
        name: 'Qora Card',
        description: '–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ Qora NFT',
        rarity: 'rare',
        imageUrl: '/image 17.png',
        supplyLimit: 1000,
        collectionId: collection.id,
      }
    })

    // –°–æ–∑–¥–∞—ë–º 3 –æ—Å–∫–æ–ª–∫–∞
    const shardImages = {
      'A': '/elements/shard-1.png',
      'B': '/elements/shard-2.png',
      'C': '/elements/shard-3.png',
    }

    for (const label of ['A', 'B', 'C']) {
      await prisma.shard.create({
        data: {
          cardId: card.id,
          label,
          imageUrl: shardImages[label as 'A' | 'B' | 'C'],
        }
      })
    }

    console.log('‚ú® –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞!')

    return NextResponse.json({
      success: true,
      message: '‚úÖ –ë–∞–∑–∞ –æ—á–∏—â–µ–Ω–∞. –°–æ–∑–¥–∞–Ω–æ: 1 –∫–∞—Ä—Ç–æ—á–∫–∞ "Qora Card" + 3 –æ—Å–∫–æ–ª–∫–∞ (A, B, C)',
      data: {
        collection: collection.name,
        card: card.name,
        shards: 3
      }
    })

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã:', error)
    return NextResponse.json(
      { 
        success: false,
        error: '–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', 
        details: error.message 
      },
      { status: 500 }
    )
  }
}
