'use client'

import { useEffect } from 'react'
import { useRouter, usePathname } from 'next/navigation'

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–≤—Ç–æ–ª–æ–≥–∏–Ω–∞
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
export function AutoLogin() {
  const router = useRouter()
  const pathname = usePathname()

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    if (typeof window === 'undefined') return

    // –ù–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –ª–æ–≥–∏–Ω–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const publicPages = ['/login', '/register', '/auth/callback', '/auth/check-email']
    if (publicPages.some(page => pathname.startsWith(page))) {
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ userId
    const savedUserId = localStorage.getItem('qora_autologin_userId')
    const savedUsername = localStorage.getItem('qora_autologin_username')

    if (savedUserId && savedUsername) {
      console.log('üîê –ê–≤—Ç–æ–ª–æ–≥–∏–Ω: –ù–∞–π–¥–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è', savedUserId)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      fetch('/api/auth/verify-session', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userId: savedUserId })
      })
        .then(res => res.json())
        .then(data => {
          if (data.valid) {
            console.log('‚úÖ –ê–≤—Ç–æ–ª–æ–≥–∏–Ω: –°–µ—Å—Å–∏—è –≤–∞–ª–∏–¥–Ω–∞')
            // –°–µ—Å—Å–∏—è –≤–∞–ª–∏–¥–Ω–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
          } else {
            console.log('‚ùå –ê–≤—Ç–æ–ª–æ–≥–∏–Ω: –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω')
            localStorage.removeItem('qora_autologin_userId')
            localStorage.removeItem('qora_autologin_username')
            
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
            if (pathname !== '/' && !pathname.startsWith('/instruction')) {
              router.push('/login')
            }
          }
        })
        .catch(err => {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏:', err)
        })
    } else {
      console.log('‚ÑπÔ∏è –ê–≤—Ç–æ–ª–æ–≥–∏–Ω: –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
      
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–π—Ç–∏ –Ω–∞ –∑–∞—â–∏—â—ë–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–µ–∑ –ª–æ–≥–∏–Ω–∞
      const protectedPages = ['/inventory', '/profile', '/admin', '/marketplace']
      if (protectedPages.some(page => pathname.startsWith(page))) {
        console.log('üîí –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ª–æ–≥–∏–Ω (–∑–∞—â–∏—â—ë–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)')
        router.push('/login')
      }
    }
  }, [pathname, router])

  return null // –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç
}
